// <auto-generated />
using System;
using JetStreamBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JetStreamBackend.Migrations
{
    [DbContext(typeof(SkiServiceContext))]
    [Migration("20231121184131_Initialcommit")]
    partial class Initialcommit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JetStreamBackend.Models.Mitarbeiter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Benutzername")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "username");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<DateTime>("Erstellungsdatum")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "creationDate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isActive");

                    b.Property<bool>("IstGesperrt")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LetzteAnmeldung")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "lastLogin");

                    b.Property<int>("LoginVersuche")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Passwort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "password");

                    b.Property<string>("Rolle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "role");

                    b.Property<string>("Telefonnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "telephone");

                    b.HasKey("Id");

                    b.HasIndex("Benutzername")
                        .IsUnique();

                    b.ToTable("Mitarbeiter");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Benutzername = "maxmuster",
                            Email = "max@example.com",
                            Erstellungsdatum = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9635),
                            IsActive = true,
                            IstGesperrt = false,
                            LetzteAnmeldung = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9704),
                            LoginVersuche = 0,
                            Name = "Max Mustermann",
                            Passwort = "passwort123",
                            Rolle = "Administrator",
                            Telefonnummer = "0123456789"
                        },
                        new
                        {
                            Id = 2,
                            Benutzername = "arda",
                            Email = "max@example.com",
                            Erstellungsdatum = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9710),
                            IsActive = true,
                            IstGesperrt = false,
                            LetzteAnmeldung = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9712),
                            LoginVersuche = 0,
                            Name = "arda Mustermann",
                            Passwort = "passwort123",
                            Rolle = "Mitarbeiter",
                            Telefonnummer = "0123456789"
                        },
                        new
                        {
                            Id = 3,
                            Benutzername = "tom",
                            Email = "tom@example.com",
                            Erstellungsdatum = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9716),
                            IsActive = true,
                            IstGesperrt = false,
                            LetzteAnmeldung = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9718),
                            LoginVersuche = 0,
                            Name = "Tom Schmitz",
                            Passwort = "passwort123",
                            Rolle = "Mitarbeiter",
                            Telefonnummer = "0123456791"
                        },
                        new
                        {
                            Id = 4,
                            Benutzername = "anna",
                            Email = "anna@example.com",
                            Erstellungsdatum = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9722),
                            IsActive = true,
                            IstGesperrt = false,
                            LetzteAnmeldung = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9724),
                            LoginVersuche = 0,
                            Name = "Anna Schmidt",
                            Passwort = "passwort123",
                            Rolle = "Mitarbeiter",
                            Telefonnummer = "0123456792"
                        },
                        new
                        {
                            Id = 5,
                            Benutzername = "jan",
                            Email = "jan@example.com",
                            Erstellungsdatum = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9727),
                            IsActive = true,
                            IstGesperrt = false,
                            LetzteAnmeldung = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9729),
                            LoginVersuche = 0,
                            Name = "Jan Bauer",
                            Passwort = "passwort123",
                            Rolle = "Mitarbeiter",
                            Telefonnummer = "0123456793"
                        },
                        new
                        {
                            Id = 6,
                            Benutzername = "sara",
                            Email = "sara@example.com",
                            Erstellungsdatum = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9733),
                            IsActive = true,
                            IstGesperrt = false,
                            LetzteAnmeldung = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9735),
                            LoginVersuche = 0,
                            Name = "Sara Koch",
                            Passwort = "passwort123",
                            Rolle = "Mitarbeiter",
                            Telefonnummer = "0123456794"
                        },
                        new
                        {
                            Id = 7,
                            Benutzername = "markus",
                            Email = "markus@example.com",
                            Erstellungsdatum = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9739),
                            IsActive = true,
                            IstGesperrt = false,
                            LetzteAnmeldung = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9740),
                            LoginVersuche = 0,
                            Name = "Markus Weber",
                            Passwort = "passwort123",
                            Rolle = "Mitarbeiter",
                            Telefonnummer = "0123456795"
                        },
                        new
                        {
                            Id = 8,
                            Benutzername = "julia",
                            Email = "julia@example.com",
                            Erstellungsdatum = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9744),
                            IsActive = true,
                            IstGesperrt = false,
                            LetzteAnmeldung = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9746),
                            LoginVersuche = 0,
                            Name = "Julia Lange",
                            Passwort = "passwort123",
                            Rolle = "Mitarbeiter",
                            Telefonnummer = "0123456796"
                        },
                        new
                        {
                            Id = 9,
                            Benutzername = "felix",
                            Email = "felix@example.com",
                            Erstellungsdatum = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9749),
                            IsActive = true,
                            IstGesperrt = false,
                            LetzteAnmeldung = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9751),
                            LoginVersuche = 0,
                            Name = "Felix Klein",
                            Passwort = "passwort123",
                            Rolle = "Mitarbeiter",
                            Telefonnummer = "0123456797"
                        },
                        new
                        {
                            Id = 10,
                            Benutzername = "sophie",
                            Email = "sophie@example.com",
                            Erstellungsdatum = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9754),
                            IsActive = true,
                            IstGesperrt = false,
                            LetzteAnmeldung = new DateTime(2023, 11, 21, 19, 41, 31, 196, DateTimeKind.Local).AddTicks(9756),
                            LoginVersuche = 0,
                            Name = "Sophie Groß",
                            Passwort = "passwort123",
                            Rolle = "Mitarbeiter",
                            Telefonnummer = "0123456798"
                        });
                });

            modelBuilder.Entity("JetStreamBackend.Models.ServiceAuftrag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<string>("KundenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "phone");

                    b.Property<DateTime>("PickupDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "pickup_date");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "priority");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "create_date");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "service");

                    b.HasKey("Id");

                    b.ToTable("ServiceAuftraege");
                });
#pragma warning restore 612, 618
        }
    }
}
